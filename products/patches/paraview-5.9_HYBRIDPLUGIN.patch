diff --git a/src/HYBRIDPlugin/HYBRIDPlugin_HYBRID.cxx b/src/HYBRIDPlugin/HYBRIDPlugin_HYBRID.cxx
index a773a0e..b6f31da 100644
--- a/src/HYBRIDPlugin/HYBRIDPlugin_HYBRID.cxx
+++ b/src/HYBRIDPlugin/HYBRIDPlugin_HYBRID.cxx
@@ -70,6 +70,7 @@
 #include <Basics_Utils.hxx>
 #include <utilities.h>
 
+#include <fstream>
 #include <algorithm>
 
 #define castToNode(n) static_cast<const SMDS_MeshNode *>( n );
@@ -815,7 +816,7 @@ static bool readGMFFile(MG_HYBRID_API*                          MGOutput,
   std::map<int, std::set<int> >::const_iterator subdomainIt = subdomainId2tetraId.begin();
   std::string aSubdomainFileName = theFile;
   aSubdomainFileName = aSubdomainFileName + ".subdomain";
-  ofstream aSubdomainFile  ( aSubdomainFileName  , ios::out);
+  std::ofstream aSubdomainFile  ( aSubdomainFileName  , ios::out);
 
   aSubdomainFile << "Nb subdomains " << subdomainId2tetraId.size() << std::endl;
   for(;subdomainIt != subdomainId2tetraId.end() ; ++subdomainIt) {
@@ -1489,7 +1490,7 @@ bool HYBRIDPlugin_HYBRID::Compute(SMESH_Mesh&         theMesh,
   // Write aSmdsToHybridIdMap to temp file
   std::string aSmdsToHybridIdMapFileName;
   aSmdsToHybridIdMapFileName = aGenericName + ".ids";  // ids relation
-  ofstream aIdsFile  ( aSmdsToHybridIdMapFileName  , ios::out);
+  std::ofstream aIdsFile  ( aSmdsToHybridIdMapFileName  , ios::out);
   Ok = aIdsFile.rdbuf()->is_open();
   if (!Ok) {
     INFOS( "Can't write into " << aSmdsToHybridIdMapFileName);
